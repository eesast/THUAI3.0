// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MessageToClient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Communication.Proto {

  /// <summary>Holder for reflection information generated from MessageToClient.proto</summary>
  public static partial class MessageToClientReflection {

    #region Descriptor
    /// <summary>File descriptor for MessageToClient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageToClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVNZXNzYWdlVG9DbGllbnQucHJvdG8SD2dvb2dsZS5wcm90b2J1ZiIpChFY",
            "WVBvc2l0aW9uTWVzc2FnZRIJCgFYGAEgASgBEgkKAVkYAiABKAEivgQKEUdh",
            "bWVPYmplY3RNZXNzYWdlEjQKCFBvc2l0aW9uGAEgASgLMiIuZ29vZ2xlLnBy",
            "b3RvYnVmLlhZUG9zaXRpb25NZXNzYWdlEg0KBVdpZHRoGAIgASgFEg4KBkhl",
            "aWdodBgDIAEoBRI0CglEaXJlY3Rpb24YBCABKA4yIS5nb29nbGUucHJvdG9i",
            "dWYuRGlyZWN0aW9uTWVzc2FnZRIwCgdPYmpUeXBlGAUgASgOMh8uZ29vZ2xl",
            "LnByb3RvYnVmLk9ialR5cGVNZXNzYWdlEjQKCUJsb2NrVHlwZRgGIAEoDjIh",
            "Lmdvb2dsZS5wcm90b2J1Zi5CbG9ja1R5cGVNZXNzYWdlEjIKCERpc2hUeXBl",
            "GAcgASgOMiAuZ29vZ2xlLnByb3RvYnVmLkRpc2hUeXBlTWVzc2FnZRIyCghU",
            "b29sVHlwZRgIIAEoDjIgLmdvb2dsZS5wcm90b2J1Zi5Ub29sVHlwZU1lc3Nh",
            "Z2USOAoLVHJpZ2dlclR5cGUYCSABKA4yIy5nb29nbGUucHJvdG9idWYuVHJp",
            "Z2dlclR5cGVNZXNzYWdlEhAKCGlzTW92aW5nGAogASgIEioKBEJ1ZmYYCyAD",
            "KA4yHC5nb29nbGUucHJvdG9idWYuQnVmZk1lc3NhZ2USNAoJRGlzaFN0YXRl",
            "GAwgASgOMiEuZ29vZ2xlLnByb3RvYnVmLkRpc2hTdGF0ZU1lc3NhZ2USDQoF",
            "U2NvcmUYDSABKAUSEQoJU3BlYWtUZXh0GA4gASgJIoACCg9NZXNzYWdlVG9D",
            "bGllbnQSWgoVR2FtZU9iamVjdE1lc3NhZ2VMaXN0GAEgAygLMjsuZ29vZ2xl",
            "LnByb3RvYnVmLk1lc3NhZ2VUb0NsaWVudC5HYW1lT2JqZWN0TWVzc2FnZUxp",
            "c3RFbnRyeRIvCgVUYXNrcxgCIAMoDjIgLmdvb2dsZS5wcm90b2J1Zi5EaXNo",
            "VHlwZU1lc3NhZ2UaYAoaR2FtZU9iamVjdE1lc3NhZ2VMaXN0RW50cnkSCwoD",
            "a2V5GAEgASgDEjEKBXZhbHVlGAIgASgLMiIuZ29vZ2xlLnByb3RvYnVmLkdh",
            "bWVPYmplY3RNZXNzYWdlOgI4ASpZCg5PYmpUeXBlTWVzc2FnZRIKCgZQZW9w",
            "bGUQABIJCgVCbG9jaxABEggKBERpc2gQAhIICgRUb29sEAMSCwoHVHJpZ2dl",
            "chAEEg8KC09ialR5cGVTaXplEAUqdAoQQmxvY2tUeXBlTWVzc2FnZRIICgRX",
            "YWxsEAASCQoFVGFibGUQARINCglGb29kUG9pbnQQAhIKCgZDb29rZXIQAxIO",
            "CgpSdWJiaXNoQmluEAQSDQoJVGFza1BvaW50EAUSEQoNQmxvY2tUeXBlU2l6",
            "ZRAGKpUGCg9EaXNoVHlwZU1lc3NhZ2USDQoJRGlzaEVtcHR5EAASCQoFV2hl",
            "YXQQARIICgRSaWNlEAISCgoGVG9tYXRvEAMSBwoDRWdnEAQSCAoETWlsaxAF",
            "EgkKBUFwcGxlEAYSCgoGQmFuYW5hEAcSDAoIRGFya1BsdW0QCBIMCghIYXd0",
            "aG9ybhAJEg4KClN0cmF3YmVycnkQChIICgRCZWVmEAsSCAoEUG9yaxAMEg8K",
            "C0NoaWNrZW5NZWF0EA0SCgoGUG90YXRvEA4SCwoHTGV0dHVjZRAPEgoKBkFn",
            "YXJpYxAQEhIKDk5lZWRsZU11c2hyb29tEBESCwoHQ2FiYmFnZRASEg0KCURp",
            "c2hTaXplMRATEgkKBUZsb3VyEBQSCgoGTm9vZGxlEBUSCQoFQnJlYWQQFhIO",
            "CgpDb29rZWRSaWNlEBcSCwoHS2V0Y2h1cBAYEgkKBUNyZWFtEBkSEgoOVG9t",
            "YXRvRnJpZWRFZ2cQGhIYChRUb21hdG9GcmllZEVnZ05vb2RsZRAbEg4KCkJl",
            "ZWZOb29kbGUQHBIMCghPdmVyUmljZRAdEg4KCkh1YW5nTWVuSmkQHhIMCghC",
            "YXJiZWN1ZRAfEg8KC0ZyZW5jaEZyaWVzECASDQoJUGx1bUp1aWNlECESDQoJ",
            "SGFtYnVyZ2VyECISFgoSU3RyYXdiZXJyeUljZWNyZWFtECMSEgoOUG9wY29y",
            "bkNoaWNrZW4QJBISCg5BZ2FyaWNGcmllZEVnZxAlEggKBENha2UQJhIQCgxC",
            "aW5nVGFuZ0h1THUQJxIOCgpGcnVpdFNhbGFkECgSDQoJU3BpY2VkUG90ECkS",
            "DwoLU3BpY2VkUG90XzMQKhIPCgtTcGljZWRQb3RfNBArEg8KC1NwaWNlZFBv",
            "dF81ECwSDwoLU3BpY2VkUG90XzYQLRIPCgtTcGljZWRQb3RfNxAuEg8KC1Nw",
            "aWNlZFBvdF84EC8SDQoJRGlzaFNpemUyEDASEgoOT3ZlckNvb2tlZERpc2gQ",
            "MRIMCghEYXJrRGlzaBAyEg0KCURpc2hTaXplMxAzKtIBCg9Ub29sVHlwZU1l",
            "c3NhZ2USDQoJVG9vbEVtcHR5EAASDgoKVGlnZXJTaG9lcxABEg0KCVNwZWVk",
            "QnVmZhACEg8KC1N0cmVudGhCdWZmEAMSDQoJVGVsZVNjb3BlEAQSDQoJQ29u",
            "ZGltZW50EAUSDgoKRmVydGlsaXplchAGEg8KC0JyZWFzdFBsYXRlEAcSDQoJ",
            "U3BhY2VHYXRlEAgSDAoIV2F2ZUdsdWUQCRIMCghMYW5kTWluZRAKEggKBFRy",
            "YXAQCxIMCghUb29sU2l6ZRAQKlUKElRyaWdnZXJUeXBlTWVzc2FnZRITCg9U",
            "cmlnZ2VyV2F2ZUdsdWUQABIPCgtUcmFwVHJpZ2dlchABEggKBE1pbmUQAhIP",
            "CgtUcmlnZ2VyU2l6ZRADKkEKC0J1ZmZNZXNzYWdlEgoKBkZyb3plbhAAEgsK",
            "B1N0dW5uZWQQARILCgdTcGVlZFVwEAISDAoIU2xvd0Rvd24QAyo1ChBEaXNo",
            "U3RhdGVNZXNzYWdlEgcKA1JhdxAAEggKBEdvb2QQARIOCgpPdmVyQ29va2Vk",
            "EAIqggEKEERpcmVjdGlvbk1lc3NhZ2USCQoFUmlnaHQQABILCgdSaWdodFVw",
            "EAESBgoCVXAQAhIKCgZMZWZ0VXAQAxIICgRMZWZ0EAQSDAoITGVmdERvd24Q",
            "BRIICgREb3duEAYSDQoJUmlnaHREb3duEAcSEQoNRGlyZWN0aW9uU2l6ZRAI",
            "QhaqAhNDb21tdW5pY2F0aW9uLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Communication.Proto.ObjTypeMessage), typeof(global::Communication.Proto.BlockTypeMessage), typeof(global::Communication.Proto.DishTypeMessage), typeof(global::Communication.Proto.ToolTypeMessage), typeof(global::Communication.Proto.TriggerTypeMessage), typeof(global::Communication.Proto.BuffMessage), typeof(global::Communication.Proto.DishStateMessage), typeof(global::Communication.Proto.DirectionMessage), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Proto.XYPositionMessage), global::Communication.Proto.XYPositionMessage.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Proto.GameObjectMessage), global::Communication.Proto.GameObjectMessage.Parser, new[]{ "Position", "Width", "Height", "Direction", "ObjType", "BlockType", "DishType", "ToolType", "TriggerType", "IsMoving", "Buff", "DishState", "Score", "SpeakText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Communication.Proto.MessageToClient), global::Communication.Proto.MessageToClient.Parser, new[]{ "GameObjectMessageList", "Tasks" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum ObjTypeMessage {
    [pbr::OriginalName("People")] People = 0,
    [pbr::OriginalName("Block")] Block = 1,
    [pbr::OriginalName("Dish")] Dish = 2,
    [pbr::OriginalName("Tool")] Tool = 3,
    [pbr::OriginalName("Trigger")] Trigger = 4,
    [pbr::OriginalName("ObjTypeSize")] ObjTypeSize = 5,
  }

  public enum BlockTypeMessage {
    [pbr::OriginalName("Wall")] Wall = 0,
    [pbr::OriginalName("Table")] Table = 1,
    [pbr::OriginalName("FoodPoint")] FoodPoint = 2,
    [pbr::OriginalName("Cooker")] Cooker = 3,
    [pbr::OriginalName("RubbishBin")] RubbishBin = 4,
    [pbr::OriginalName("TaskPoint")] TaskPoint = 5,
    [pbr::OriginalName("BlockTypeSize")] BlockTypeSize = 6,
  }

  public enum DishTypeMessage {
    [pbr::OriginalName("DishEmpty")] DishEmpty = 0,
    /// <summary>
    ///以下为食材
    /// </summary>
    [pbr::OriginalName("Wheat")] Wheat = 1,
    /// <summary>
    ///水稻
    /// </summary>
    [pbr::OriginalName("Rice")] Rice = 2,
    /// <summary>
    ///番茄
    /// </summary>
    [pbr::OriginalName("Tomato")] Tomato = 3,
    /// <summary>
    ///鸡蛋
    /// </summary>
    [pbr::OriginalName("Egg")] Egg = 4,
    /// <summary>
    ///牛奶
    /// </summary>
    [pbr::OriginalName("Milk")] Milk = 5,
    /// <summary>
    ///苹果
    /// </summary>
    [pbr::OriginalName("Apple")] Apple = 6,
    /// <summary>
    ///香蕉
    /// </summary>
    [pbr::OriginalName("Banana")] Banana = 7,
    /// <summary>
    ///乌梅
    /// </summary>
    [pbr::OriginalName("DarkPlum")] DarkPlum = 8,
    /// <summary>
    ///山楂
    /// </summary>
    [pbr::OriginalName("Hawthorn")] Hawthorn = 9,
    /// <summary>
    ///草莓
    /// </summary>
    [pbr::OriginalName("Strawberry")] Strawberry = 10,
    /// <summary>
    ///牛肉
    /// </summary>
    [pbr::OriginalName("Beef")] Beef = 11,
    /// <summary>
    ///猪肉
    /// </summary>
    [pbr::OriginalName("Pork")] Pork = 12,
    /// <summary>
    ///鸡肉
    /// </summary>
    [pbr::OriginalName("ChickenMeat")] ChickenMeat = 13,
    /// <summary>
    ///土豆
    /// </summary>
    [pbr::OriginalName("Potato")] Potato = 14,
    /// <summary>
    ///生菜
    /// </summary>
    [pbr::OriginalName("Lettuce")] Lettuce = 15,
    /// <summary>
    ///木耳
    /// </summary>
    [pbr::OriginalName("Agaric")] Agaric = 16,
    /// <summary>
    ///金针菇
    /// </summary>
    [pbr::OriginalName("NeedleMushroom")] NeedleMushroom = 17,
    /// <summary>
    ///包菜
    /// </summary>
    [pbr::OriginalName("Cabbage")] Cabbage = 18,
    [pbr::OriginalName("DishSize1")] DishSize1 = 19,
    /// <summary>
    ///以下为中间产物
    /// </summary>
    [pbr::OriginalName("Flour")] Flour = 20,
    /// <summary>
    ///面条
    /// </summary>
    [pbr::OriginalName("Noodle")] Noodle = 21,
    /// <summary>
    ///面包片
    /// </summary>
    [pbr::OriginalName("Bread")] Bread = 22,
    /// <summary>
    ///米饭
    /// </summary>
    [pbr::OriginalName("CookedRice")] CookedRice = 23,
    /// <summary>
    ///番茄酱
    /// </summary>
    [pbr::OriginalName("Ketchup")] Ketchup = 24,
    /// <summary>
    ///奶油
    /// </summary>
    [pbr::OriginalName("Cream")] Cream = 25,
    /// <summary>
    ///以下为菜品
    /// </summary>
    [pbr::OriginalName("TomatoFriedEgg")] TomatoFriedEgg = 26,
    /// <summary>
    ///西红柿鸡蛋面
    /// </summary>
    [pbr::OriginalName("TomatoFriedEggNoodle")] TomatoFriedEggNoodle = 27,
    /// <summary>
    ///清青牛拉
    /// </summary>
    [pbr::OriginalName("BeefNoodle")] BeefNoodle = 28,
    /// <summary>
    ///盖浇饭
    /// </summary>
    [pbr::OriginalName("OverRice")] OverRice = 29,
    /// <summary>
    ///黄焖鸡米饭
    /// </summary>
    [pbr::OriginalName("HuangMenJi")] HuangMenJi = 30,
    /// <summary>
    ///烤肉
    /// </summary>
    [pbr::OriginalName("Barbecue")] Barbecue = 31,
    /// <summary>
    ///薯条
    /// </summary>
    [pbr::OriginalName("FrenchFries")] FrenchFries = 32,
    /// <summary>
    ///酸梅汤
    /// </summary>
    [pbr::OriginalName("PlumJuice")] PlumJuice = 33,
    /// <summary>
    ///汉堡
    /// </summary>
    [pbr::OriginalName("Hamburger")] Hamburger = 34,
    /// <summary>
    ///草莓圣代
    /// </summary>
    [pbr::OriginalName("StrawberryIcecream")] StrawberryIcecream = 35,
    /// <summary>
    ///鸡米花
    /// </summary>
    [pbr::OriginalName("PopcornChicken")] PopcornChicken = 36,
    /// <summary>
    ///木耳炒蛋
    /// </summary>
    [pbr::OriginalName("AgaricFriedEgg")] AgaricFriedEgg = 37,
    /// <summary>
    ///蛋糕
    /// </summary>
    [pbr::OriginalName("Cake")] Cake = 38,
    /// <summary>
    ///冰糖葫芦
    /// </summary>
    [pbr::OriginalName("BingTangHuLu")] BingTangHuLu = 39,
    /// <summary>
    ///水果色拉
    /// </summary>
    [pbr::OriginalName("FruitSalad")] FruitSalad = 40,
    [pbr::OriginalName("SpicedPot")] SpicedPot = 41,
    [pbr::OriginalName("SpicedPot_3")] SpicedPot3 = 42,
    [pbr::OriginalName("SpicedPot_4")] SpicedPot4 = 43,
    [pbr::OriginalName("SpicedPot_5")] SpicedPot5 = 44,
    [pbr::OriginalName("SpicedPot_6")] SpicedPot6 = 45,
    [pbr::OriginalName("SpicedPot_7")] SpicedPot7 = 46,
    /// <summary>
    ///香锅
    /// </summary>
    [pbr::OriginalName("SpicedPot_8")] SpicedPot8 = 47,
    [pbr::OriginalName("DishSize2")] DishSize2 = 48,
    /// <summary>
    ///以下为垃圾
    /// </summary>
    [pbr::OriginalName("OverCookedDish")] OverCookedDish = 49,
    /// <summary>
    ///黑暗料理
    /// </summary>
    [pbr::OriginalName("DarkDish")] DarkDish = 50,
    [pbr::OriginalName("DishSize3")] DishSize3 = 51,
  }

  public enum ToolTypeMessage {
    [pbr::OriginalName("ToolEmpty")] ToolEmpty = 0,
    [pbr::OriginalName("TigerShoes")] TigerShoes = 1,
    [pbr::OriginalName("SpeedBuff")] SpeedBuff = 2,
    [pbr::OriginalName("StrenthBuff")] StrenthBuff = 3,
    [pbr::OriginalName("TeleScope")] TeleScope = 4,
    [pbr::OriginalName("Condiment")] Condiment = 5,
    [pbr::OriginalName("Fertilizer")] Fertilizer = 6,
    [pbr::OriginalName("BreastPlate")] BreastPlate = 7,
    [pbr::OriginalName("SpaceGate")] SpaceGate = 8,
    /// <summary>
    ///Eye = 9;
    /// </summary>
    [pbr::OriginalName("WaveGlue")] WaveGlue = 9,
    [pbr::OriginalName("LandMine")] LandMine = 10,
    [pbr::OriginalName("Trap")] Trap = 11,
    /// <summary>
    ///FlashBomb = 12;
    ///Hammer = 13;
    ///Brick = 14;
    ///Stealer = 15;
    /// </summary>
    [pbr::OriginalName("ToolSize")] ToolSize = 16,
  }

  public enum TriggerTypeMessage {
    [pbr::OriginalName("TriggerWaveGlue")] TriggerWaveGlue = 0,
    [pbr::OriginalName("TrapTrigger")] TrapTrigger = 1,
    [pbr::OriginalName("Mine")] Mine = 2,
    [pbr::OriginalName("TriggerSize")] TriggerSize = 3,
  }

  public enum BuffMessage {
    [pbr::OriginalName("Frozen")] Frozen = 0,
    [pbr::OriginalName("Stunned")] Stunned = 1,
    [pbr::OriginalName("SpeedUp")] SpeedUp = 2,
    [pbr::OriginalName("SlowDown")] SlowDown = 3,
  }

  public enum DishStateMessage {
    [pbr::OriginalName("Raw")] Raw = 0,
    [pbr::OriginalName("Good")] Good = 1,
    [pbr::OriginalName("OverCooked")] OverCooked = 2,
  }

  public enum DirectionMessage {
    [pbr::OriginalName("Right")] Right = 0,
    [pbr::OriginalName("RightUp")] RightUp = 1,
    [pbr::OriginalName("Up")] Up = 2,
    [pbr::OriginalName("LeftUp")] LeftUp = 3,
    [pbr::OriginalName("Left")] Left = 4,
    [pbr::OriginalName("LeftDown")] LeftDown = 5,
    [pbr::OriginalName("Down")] Down = 6,
    [pbr::OriginalName("RightDown")] RightDown = 7,
    [pbr::OriginalName("DirectionSize")] DirectionSize = 8,
  }

  #endregion

  #region Messages
  public sealed partial class XYPositionMessage : pb::IMessage<XYPositionMessage> {
    private static readonly pb::MessageParser<XYPositionMessage> _parser = new pb::MessageParser<XYPositionMessage>(() => new XYPositionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XYPositionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.Proto.MessageToClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYPositionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYPositionMessage(XYPositionMessage other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XYPositionMessage Clone() {
      return new XYPositionMessage(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XYPositionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XYPositionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XYPositionMessage other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameObjectMessage : pb::IMessage<GameObjectMessage> {
    private static readonly pb::MessageParser<GameObjectMessage> _parser = new pb::MessageParser<GameObjectMessage>(() => new GameObjectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameObjectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.Proto.MessageToClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectMessage(GameObjectMessage other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      width_ = other.width_;
      height_ = other.height_;
      direction_ = other.direction_;
      objType_ = other.objType_;
      blockType_ = other.blockType_;
      dishType_ = other.dishType_;
      toolType_ = other.toolType_;
      triggerType_ = other.triggerType_;
      isMoving_ = other.isMoving_;
      buff_ = other.buff_.Clone();
      dishState_ = other.dishState_;
      score_ = other.score_;
      speakText_ = other.speakText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectMessage Clone() {
      return new GameObjectMessage(this);
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Communication.Proto.XYPositionMessage position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.XYPositionMessage Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "Width" field.</summary>
    public const int WidthFieldNumber = 2;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "Height" field.</summary>
    public const int HeightFieldNumber = 3;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "Direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::Communication.Proto.DirectionMessage direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.DirectionMessage Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "ObjType" field.</summary>
    public const int ObjTypeFieldNumber = 5;
    private global::Communication.Proto.ObjTypeMessage objType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.ObjTypeMessage ObjType {
      get { return objType_; }
      set {
        objType_ = value;
      }
    }

    /// <summary>Field number for the "BlockType" field.</summary>
    public const int BlockTypeFieldNumber = 6;
    private global::Communication.Proto.BlockTypeMessage blockType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.BlockTypeMessage BlockType {
      get { return blockType_; }
      set {
        blockType_ = value;
      }
    }

    /// <summary>Field number for the "DishType" field.</summary>
    public const int DishTypeFieldNumber = 7;
    private global::Communication.Proto.DishTypeMessage dishType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.DishTypeMessage DishType {
      get { return dishType_; }
      set {
        dishType_ = value;
      }
    }

    /// <summary>Field number for the "ToolType" field.</summary>
    public const int ToolTypeFieldNumber = 8;
    private global::Communication.Proto.ToolTypeMessage toolType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.ToolTypeMessage ToolType {
      get { return toolType_; }
      set {
        toolType_ = value;
      }
    }

    /// <summary>Field number for the "TriggerType" field.</summary>
    public const int TriggerTypeFieldNumber = 9;
    private global::Communication.Proto.TriggerTypeMessage triggerType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.TriggerTypeMessage TriggerType {
      get { return triggerType_; }
      set {
        triggerType_ = value;
      }
    }

    /// <summary>Field number for the "isMoving" field.</summary>
    public const int IsMovingFieldNumber = 10;
    private bool isMoving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMoving {
      get { return isMoving_; }
      set {
        isMoving_ = value;
      }
    }

    /// <summary>Field number for the "Buff" field.</summary>
    public const int BuffFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Communication.Proto.BuffMessage> _repeated_buff_codec
        = pb::FieldCodec.ForEnum(90, x => (int) x, x => (global::Communication.Proto.BuffMessage) x);
    private readonly pbc::RepeatedField<global::Communication.Proto.BuffMessage> buff_ = new pbc::RepeatedField<global::Communication.Proto.BuffMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Communication.Proto.BuffMessage> Buff {
      get { return buff_; }
    }

    /// <summary>Field number for the "DishState" field.</summary>
    public const int DishStateFieldNumber = 12;
    private global::Communication.Proto.DishStateMessage dishState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Communication.Proto.DishStateMessage DishState {
      get { return dishState_; }
      set {
        dishState_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 13;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "SpeakText" field.</summary>
    public const int SpeakTextFieldNumber = 14;
    private string speakText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpeakText {
      get { return speakText_; }
      set {
        speakText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameObjectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameObjectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Direction != other.Direction) return false;
      if (ObjType != other.ObjType) return false;
      if (BlockType != other.BlockType) return false;
      if (DishType != other.DishType) return false;
      if (ToolType != other.ToolType) return false;
      if (TriggerType != other.TriggerType) return false;
      if (IsMoving != other.IsMoving) return false;
      if(!buff_.Equals(other.buff_)) return false;
      if (DishState != other.DishState) return false;
      if (Score != other.Score) return false;
      if (SpeakText != other.SpeakText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (ObjType != 0) hash ^= ObjType.GetHashCode();
      if (BlockType != 0) hash ^= BlockType.GetHashCode();
      if (DishType != 0) hash ^= DishType.GetHashCode();
      if (ToolType != 0) hash ^= ToolType.GetHashCode();
      if (TriggerType != 0) hash ^= TriggerType.GetHashCode();
      if (IsMoving != false) hash ^= IsMoving.GetHashCode();
      hash ^= buff_.GetHashCode();
      if (DishState != 0) hash ^= DishState.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (SpeakText.Length != 0) hash ^= SpeakText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (Direction != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Direction);
      }
      if (ObjType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ObjType);
      }
      if (BlockType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BlockType);
      }
      if (DishType != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) DishType);
      }
      if (ToolType != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ToolType);
      }
      if (TriggerType != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TriggerType);
      }
      if (IsMoving != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsMoving);
      }
      buff_.WriteTo(output, _repeated_buff_codec);
      if (DishState != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) DishState);
      }
      if (Score != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Score);
      }
      if (SpeakText.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SpeakText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (ObjType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObjType);
      }
      if (BlockType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlockType);
      }
      if (DishType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DishType);
      }
      if (ToolType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ToolType);
      }
      if (TriggerType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TriggerType);
      }
      if (IsMoving != false) {
        size += 1 + 1;
      }
      size += buff_.CalculateSize(_repeated_buff_codec);
      if (DishState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DishState);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (SpeakText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpeakText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameObjectMessage other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Communication.Proto.XYPositionMessage();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.ObjType != 0) {
        ObjType = other.ObjType;
      }
      if (other.BlockType != 0) {
        BlockType = other.BlockType;
      }
      if (other.DishType != 0) {
        DishType = other.DishType;
      }
      if (other.ToolType != 0) {
        ToolType = other.ToolType;
      }
      if (other.TriggerType != 0) {
        TriggerType = other.TriggerType;
      }
      if (other.IsMoving != false) {
        IsMoving = other.IsMoving;
      }
      buff_.Add(other.buff_);
      if (other.DishState != 0) {
        DishState = other.DishState;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.SpeakText.Length != 0) {
        SpeakText = other.SpeakText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Communication.Proto.XYPositionMessage();
            }
            input.ReadMessage(Position);
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 32: {
            Direction = (global::Communication.Proto.DirectionMessage) input.ReadEnum();
            break;
          }
          case 40: {
            ObjType = (global::Communication.Proto.ObjTypeMessage) input.ReadEnum();
            break;
          }
          case 48: {
            BlockType = (global::Communication.Proto.BlockTypeMessage) input.ReadEnum();
            break;
          }
          case 56: {
            DishType = (global::Communication.Proto.DishTypeMessage) input.ReadEnum();
            break;
          }
          case 64: {
            ToolType = (global::Communication.Proto.ToolTypeMessage) input.ReadEnum();
            break;
          }
          case 72: {
            TriggerType = (global::Communication.Proto.TriggerTypeMessage) input.ReadEnum();
            break;
          }
          case 80: {
            IsMoving = input.ReadBool();
            break;
          }
          case 90:
          case 88: {
            buff_.AddEntriesFrom(input, _repeated_buff_codec);
            break;
          }
          case 96: {
            DishState = (global::Communication.Proto.DishStateMessage) input.ReadEnum();
            break;
          }
          case 104: {
            Score = input.ReadInt32();
            break;
          }
          case 114: {
            SpeakText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageToClient : pb::IMessage<MessageToClient> {
    private static readonly pb::MessageParser<MessageToClient> _parser = new pb::MessageParser<MessageToClient>(() => new MessageToClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageToClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Communication.Proto.MessageToClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient(MessageToClient other) : this() {
      gameObjectMessageList_ = other.gameObjectMessageList_.Clone();
      tasks_ = other.tasks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient Clone() {
      return new MessageToClient(this);
    }

    /// <summary>Field number for the "GameObjectMessageList" field.</summary>
    public const int GameObjectMessageListFieldNumber = 1;
    private static readonly pbc::MapField<long, global::Communication.Proto.GameObjectMessage>.Codec _map_gameObjectMessageList_codec
        = new pbc::MapField<long, global::Communication.Proto.GameObjectMessage>.Codec(pb::FieldCodec.ForInt64(8), pb::FieldCodec.ForMessage(18, global::Communication.Proto.GameObjectMessage.Parser), 10);
    private readonly pbc::MapField<long, global::Communication.Proto.GameObjectMessage> gameObjectMessageList_ = new pbc::MapField<long, global::Communication.Proto.GameObjectMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, global::Communication.Proto.GameObjectMessage> GameObjectMessageList {
      get { return gameObjectMessageList_; }
    }

    /// <summary>Field number for the "Tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Communication.Proto.DishTypeMessage> _repeated_tasks_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Communication.Proto.DishTypeMessage) x);
    private readonly pbc::RepeatedField<global::Communication.Proto.DishTypeMessage> tasks_ = new pbc::RepeatedField<global::Communication.Proto.DishTypeMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Communication.Proto.DishTypeMessage> Tasks {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageToClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageToClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!GameObjectMessageList.Equals(other.GameObjectMessageList)) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= GameObjectMessageList.GetHashCode();
      hash ^= tasks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gameObjectMessageList_.WriteTo(output, _map_gameObjectMessageList_codec);
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameObjectMessageList_.CalculateSize(_map_gameObjectMessageList_codec);
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageToClient other) {
      if (other == null) {
        return;
      }
      gameObjectMessageList_.Add(other.gameObjectMessageList_);
      tasks_.Add(other.tasks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameObjectMessageList_.AddEntriesFrom(input, _map_gameObjectMessageList_codec);
            break;
          }
          case 18:
          case 16: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
